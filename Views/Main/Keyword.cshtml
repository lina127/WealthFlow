@{
    Layout = "../Shared/_Layout";
    ViewData["Title"] = "Keyword";
}
@model WealthFlow.DataDTO

<div class="row">
    <div class="col-9">
        <h1>@ViewData["Title"]</h1>
    </div>
    <div class="col-3">
        <button class="btn btn-primary" id="showNewKeywordFormContainer">New Keyword</button>
    </div>
    <div class="col-12" id="newKeywordFormContainer">
        <form class="form-inline">
            <label class="sr-only" for="type">Type</label>
            <select class="form-control mb-2 mr-sm-4" id="type">
                <option disabled selected>Type</option>
                <option value="Income">Income</option>
                <option value="Expense">Expense</option>
            </select>

            <label class="sr-only" for="type">Type</label>
            <select class="form-control mb-2 mr-sm-4" id="type">
                <option disabled selected>-------------</option>
                @foreach (var i in Model.Categories)
                {
                    <option value="@i.CategoryId">@i.Name</option>
                }

            </select>

            <label class="sr-only" for="name">Keyword</label>
            <input type="text" class="form-control mb-2 mr-sm-4" id="name" placeholder="Keyword" />

            <button type="button" class="btn btn-primary mb-2" id="addKeyword">Add Keyword</button>
        </form>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                Type
            </th>
            <th>
                Category
            </th>
            <th>
                Keyword
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Keywords)
        {
            <tr id="@item.KeywordId">
                <td>
                    @item.Category.Type
                </td>
                <td>
                    @item.Category.Name
                </td>
                <td>
                    <input type="text" value="@item.Name" class="form-control" />
                </td>

                <td>
                    <button class="btn btn-primary updateKeyword">Update</button>
                    <button class="btn btn-danger deleteKeyword">Update</button>
                </td>
            </tr>
        }
    </tbody>
</table>
<script type="text/javascript">
    $("document").ready(function () {
        $("#newCategoryFormContainer").hide();

        $("#showNewCategoryFormContainer").click(function (e) {
            e.preventDefault();
            $("#newCategoryFormContainer").show();
        });

        $("#addCategory").click(function (e) {
            e.preventDefault();
            $("#newCategoryFormContainer").hide();

            let name = $("#name").val();
            let type = $("#type").val();

            if (name == "" || type == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Empty field found.'
                });
                return;
            }

            let data = { name: name, type: type };

            $.ajax({
                type: "POST",
                url: "AddNewCategory",
                data: data,
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Category has been added.'
                    }).then(function () {
                        location.reload();
                    });
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        });

        $(".updateCategory").click(function (e) {
            e.preventDefault();
            let categoryId = $(this)[0].parentNode.parentNode.id;
            let name = $(this).closest('td').siblings().find('input')[0].value;
            let type = $(this).closest('td').siblings().find('select')[0].value;

            if (name == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Empty field found.'
                });
                return;
            }

            let data = { categoryId: categoryId, newName : name, newType : type };

            $.ajax({
                type: "POST",
                url: "RenameCategory",
                data: data,
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Category has been updated successfully.'
                    });
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        });
    });

</script>