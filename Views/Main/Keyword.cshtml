@{
    Layout = "../Shared/_Layout";
    ViewData["Title"] = "Keyword";
}
@model WealthFlow.DataDTO

<div class="row mb-3" style="align-items: center;">
    <div class="col-6">
        <h1>@ViewData["Title"]</h1>
    </div>
    <div class="col-6">
        <button class="btn btn-primary float-right" id="showNewKeywordFormContainer"><i class="fas fa-plus"></i></button>
    </div>
    <div class="col-12" id="newKeywordFormContainer">
        <form class="form-inline">
            <label class="sr-only" for="type">Type</label>
            <select class="form-control mb-2 mr-sm-4" id="categoryId">
                <option disabled selected>-------------</option>
                @foreach (var i in Model.Categories)
                {
                    <option value="@i.CategoryId">@i.Name</option>
                }

            </select>

            <label class="sr-only" for="name">Keyword</label>
            <input type="text" class="form-control mb-2 mr-sm-4" id="name" placeholder="Keyword" />

            <button type="button" class="btn btn-primary mb-2" id="addKeyword">Add Keyword</button>
        </form>
    </div>
</div>
<table class="table table-striped" id="keywordTable">
    <thead class="thead-dark">
        <tr>
            <th>
                Type
            </th>
            <th>
                Category
            </th>
            <th>
                Keyword
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Keywords)
        {
            <tr id="@item.KeywordId">
                <td>
                    @item.Category.Type
                </td>
                <td>
                    @item.Category.Name
                </td>
                <td>
                    <input type="text" value="@item.Name" class="form-control" />
                </td>

                <td class="text-right">
                    <button class="btn btn-primary updateKeyword"><i class="fas fa-pen-square"></i></button>
                    <button class="btn btn-danger deleteKeyword"><i class="fas fa-trash-alt"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="row mt-5 mb-3">
    <div class="col-9">
        <h1>Exclude Keyword</h1>
    </div>
    <div class="col-3">
        <button class="btn btn-primary float-right" id="showExcludeKeywordFormContainer"><i class="fas fa-plus"></i></button>
    </div>

</div>


<div class="col-12" id="newExcludeKeywordFormContainer">
    <table class="table">
        <thead>
            <tr>
                <th>
                    Select Card
                </th>
                <th>
                    Excluding Keyword
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <form class="form-inline">
                        <div class="form-group">
                            <select class="form-control" id="cardId">
                                <option disabled selected>-------------</option>
                                @foreach (var i in Model.Cards)
                                {
                                    <option value="@i.CardId">@i.CardNum - @i.Type [@i.Bank.ToUpper()]</option>
                                }

                            </select>
                        </div>
                    </form>
                </td>
                <td>
                    <input type="text" class="form-control mb-2 mr-sm-4" placeholder="Exclude Keyword" id="excludeKeywordName" />
                </td>
                <td class="float-right">
                    <button type="button" class="btn btn-primary mb-2" id="addExcludeKeyword">Add Exclude Keyword</button>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<table class="table table-striped" id="excludeKeywordTable">
    <thead class="thead-dark">
        <tr>
            <th>
                Card
            </th>
            <th>
                Excluding Keyword
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var i in Model.ExcludeKeywords)
        {
            string str = i.Card.CardNum.Substring(i.Card.CardNum.Length - 4)
        + " - " + i.Card.Type + " ["
        + i.Card.Bank.ToUpper() + "]";
            <tr id="@i.ExcludeKeywordId">
                <td>
                    @str
                </td>


                <td>
                    <input type="text" class="form-control" value="@i.Name" />
                </td>

                <td class="text-right">
                    <button class="btn btn-primary updateExcludeKeyword"><i class="fas fa-pen-square"></i></button>
                    <button class="btn btn-danger deleteExcludeKeyword"><i class="fas fa-trash-alt"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    $("document").ready(function () {
        $("#newKeywordFormContainer").hide();
        $("#newExcludeKeywordFormContainer").hide();

        $("#keywordTable").DataTable();
        $("#excludeKeywordTable").DataTable();

        $("#showNewKeywordFormContainer").click(function (e) {
            e.preventDefault();
            $("#newKeywordFormContainer").show();
        });

        $("#addKeyword").click(function (e) {
            e.preventDefault();
            $("#newKeywordFormContainer").hide();

            let name = $("#name").val();
            let categoryId = $("#categoryId").val();

            if (name == "" || categoryId < 1) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Empty field found.'
                });
                return;
            }

            let data = { name: name, categoryId: categoryId };

            $.ajax({
                type: "POST",
                url: "AddNewKeyword",
                data: data,
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Category has been added.'
                    }).then(function () {
                        location.reload();
                    });
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        });

        $(".updateKeyword").click(function (e) {
            e.preventDefault();
            let keywordId = $(this)[0].parentNode.parentNode.id;
            let name = $(this).closest('td').siblings().find('input')[0].value;

            if (name == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Empty field found.'
                });
                return;
            }

            let data = { keywordId: keywordId, newName: name };

            $.ajax({
                type: "POST",
                url: "RenameKeyword",
                data: data,
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Keyword has been updated successfully.'
                    });
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        });

        $(".deleteKeyword").click(function (e) {
            e.preventDefault();
            let keywordId = $(this)[0].parentNode.parentNode.id;

            let data = { keywordId: keywordId };

            $.ajax({
                type: "POST",
                url: "DeleteKeyword",
                data: data,
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Keyword has been deleted successfully.'
                    }).then(function () {
                        location.reload();
                    });
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        });

        $("#showExcludeKeywordFormContainer").click(function (e) {
            e.preventDefault();
            $("#newExcludeKeywordFormContainer").show();
        });

        $("#addExcludeKeyword").click(function (e) {
            e.preventDefault();
            $("#newExcludeKeywordFormContainer").hide();

            let cardId = $("#cardId").val();
            let excludeKeywordName = $("#excludeKeywordName").val();
            if (excludeKeywordName == "" || cardId < 1) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Empty field found.'
                });
                return;
            }

            let data = { cardId: cardId, excludeKeywordName: excludeKeywordName };

            $.ajax({
                type: "POST",
                url: "AddExclueKeyword",
                data: data,
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Exclude keyword has been added.'
                    }).then(function () {
                        location.reload();
                    });
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        });

        $(".updateExcludeKeyword").click(function (e) {
            e.preventDefault();
            let excludeKeywordId = $(this)[0].parentNode.parentNode.id;
            let name = $(this).closest('td').siblings().find('input')[0].value;

            if (name == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Empty field found.'
                });
                return;
            }

            let data = { excludeKeywordId: excludeKeywordId, newName: name };

            $.ajax({
                type: "POST",
                url: "RenameExcludeKeyword",
                data: data,
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Keyword has been updated successfully.'
                    });
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        });

        $(".deleteExcludeKeyword").click(function (e) {
            e.preventDefault();
            let excludeKeywordId = $(this)[0].parentNode.parentNode.id;

            let data = { excludeKeywordId: excludeKeywordId };

            $.ajax({
                type: "POST",
                url: "DeleteExcludeKeyword",
                data: data,
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Exclude keyword has been deleted successfully.'
                    }).then(function () {
                        location.reload();
                    });
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        });
    });

</script>