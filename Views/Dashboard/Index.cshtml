@{
    Layout = "../Shared/_Layout";
    ViewData["Title"] = "Dashboard";
}

<div class="row">
    <div class="col-md-6 vertical-align-center">
        <h1>@ViewData["Title"]</h1>
    </div>
    <div class="col-md-6 vertical-align-center">
        <form class="row">
            <div class="form-group col-4">
                <label for="from">From</label>
                <input type="date" class="form-control" id="from">
            </div>
            <div class="form-group col-4">
                <label for="to">To</label>
                <input type="date" class="form-control" id="to">
            </div>
            <div class="form-group col-4" style="align-self:self-end;">
                <button type="button" class="btn btn-primary" id="updateDate">Update</button>
            </div>
        </form>
    </div>
    <div class="col-12">
        <div class="alert alert-danger d-none" role="alert" id="alert-danger"></div>
    </div>
    <hr/>
    <div class="col-md-4 col-xl-3 p-4">
        <h3>Expense per category</h3>
        <small>Total: $<span id="GetTotalAmountPerCategory_3_total"></span></small>
        <canvas id="GetTotalAmountPerCategory_3_canvas"></canvas>
    </div>
    <div class="col-md-4 col-xl-3 p-4">
        <h3>Income per category</h3>
        <small>Total: $<span id="GetTotalAmountPerCategory_2_total"></span></small>
        <canvas id="GetTotalAmountPerCategory_2_canvas"></canvas>
    </div>
    <div class="col-md-4 col-xl-3 p-4">
        <h3>Recent Transactions</h3>
        <table id="recentTransaction" class="table table-striped">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Merchant</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody id="recentTransactionBody"></tbody>
        </table>
    </div>

    <div class="col-md-4 col-xl-3 p-4">
        <h3>Total per month</h3>
        <canvas id="GetTotalAmountPerMonth_1_canvas"></canvas>
    </div>

    <div class="col-md-4 col-xl-3 p-4">
        <h3>Income per month</h3>
        <canvas id="GetTotalAmountPerMonth_2_canvas"></canvas>
    </div>
    <div class="col-md-4 col-xl-3 p-4">
        <h3>Expense per month</h3>
        <canvas id="GetTotalAmountPerMonth_3_canvas"></canvas>
    </div>

</div>

<script type="text/javascript">
    $("document").ready(function () {
        // Initial dates
        var now = new Date();
        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);

        var toVal = now.getFullYear() + "-" + (month) + "-" + (day);
        $("#to").val(toVal);

        var month = ("0" + (now.getMonth())).slice(-2);
        var fromVal = now.getFullYear() + "-" + (month) + "-" + (day);
        $("#from").val(fromVal);

        // Get last transaction date
        $.ajax({
            type: "POST",
            url: "/Main/GetLastTransaction",
            success: function (response) {
                if (response.$id > 0) {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'info',
                        title: 'Last transaction: ' + response.date.substring(0, 10),
                        showConfirmButton: true
                    })
                }
            },
            failure: function (response) {
                alert(response.d);
            }
        });

        // Get recent transaction date
        $.ajax({
            type: "POST",
            data: {total : 6},
            url: "/Dashboard/GetRecentTransactions",
            success: function (response) {
                if (response.$values.length > 0) {
                    response = response.$values;
                    console.log(response)
                    let recentTransactionBodyHTML = "";
                    for (let i = 0; i < response.length; i++) {
                        let amount = response[i].amount;
                        let amountHTML = "";
                        if (amount > 0) {
                            amountHTML = "<span class='text-success'>$" + amount.toFixed(2) + "</span>";
                        } else {
                            amount = amount * -1;
                            amountHTML = "<span class='text-danger'>$" + amount.toFixed(2) + "</span>";
                        }
                        recentTransactionBodyHTML += "<tr><td>" + response[i].date.substring(0, 10) + "</td><td>" + response[i].merchant + "</td><td class='text-right'>" + amountHTML + "</td></tr >";
                    }
                    $("#recentTransactionBody").html(recentTransactionBodyHTML);
                }
            },
            failure: function (response) {
                alert(response.d);
            }
        });

        // chart variables
        var chartArray = new Array();

        renderData(fromVal, toVal);

        $("#updateDate").click(function (e) {
            e.preventDefault();
            let newFrom = $("#from").val();
            let newTo = $("#to").val();

            renderData(newFrom, newTo);
        });

        function renderData(from, to) {
            $.ajax({
                type: "POST",
                data: { from: from, to: to, dataType: 3 },
                url: "/Dashboard/GetTotalAmountPerCategory",
                success: function (response) {
                    if (response.$values.length > 0) {
                        response = response.$values;
                        $("#alert-danger").addClass("d-none");
                        total = response.reduce((n, { amount }) => n + amount, 0).toFixed(2);
                        $("#GetTotalAmountPerCategory_3_total").html(total);
                        displayTotalPerCategoryChart("GetTotalAmountPerCategory_3_canvas", response, "Expense per category");
                    } else {
                        $("#alert-danger").removeClass("d-none");
                        $("#alert-danger").html("No data to display");
                    }
                },
                failure: function (response) {
                    alert(response.d);
                }
            });

            $.ajax({
                type: "POST",
                data: { from: from, to: to, dataType: 2 },
                url: "/Dashboard/GetTotalAmountPerCategory",
                success: function (response) {
                    if (response.$values.length > 0) {
                        response = response.$values;
                        $("#alert-danger").addClass("d-none");
                        total = response.reduce((n, { amount }) => n + amount, 0).toFixed(2);
                        $("#GetTotalAmountPerCategory_2_total").html(total);
                        displayTotalPerCategoryChart("GetTotalAmountPerCategory_2_canvas", response);

                    } else {
                        $("#alert-danger").removeClass("d-none");
                        $("#alert-danger").html("No data to display");
                    }

                },
                failure: function (response) {
                    alert(response.d);
                }
            });

            $.ajax({
                type: "POST",
                data: { from: from, to: to, dataType: 1 },
                url: "/Dashboard/GetTotalAmountPerMonth",
                success: function (response) {
                    if (response.$values.length > 0) {
                        response = response.$values;
                        $("#alert-danger").addClass("d-none");
                        total = response.reduce((n, { amount }) => n + amount, 0).toFixed(2);
                        $("#GetTotalAmountPerMonth_1_total").html(total);
                        displayTotalPerMonthChart("GetTotalAmountPerMonth_1_canvas", response);

                    } else {
                        $("#alert-danger").removeClass("d-none");
                        $("#alert-danger").html("No data to display");
                    }

                },
                failure: function (response) {
                    alert(response.d);
                }
            });

            $.ajax({
                type: "POST",
                data: { from: from, to: to, dataType: 2},
                url: "/Dashboard/GetTotalAmountPerMonth",
                success: function (response) {
                    if (response.$values.length > 0) {
                        response = response.$values;
                        $("#alert-danger").addClass("d-none");
                        total = response.reduce((n, { amount }) => n + amount, 0).toFixed(2);
                        $("#GetTotalAmountPerMonth_2_total").html(total);
                        displayTotalPerMonthChart("GetTotalAmountPerMonth_2_canvas", response);

                    } else {
                        $("#alert-danger").removeClass("d-none");
                        $("#alert-danger").html("No data to display");
                    }
                    
                },
                failure: function (response) {
                    alert(response.d);
                }
            });

            $.ajax({
                type: "POST",
                data: { from: from, to: to, dataType: 3 },
                url: "/Dashboard/GetTotalAmountPerMonth",
                success: function (response) {
                    if (response.$values.length > 0) {
                        response = response.$values;
                        $("#alert-danger").addClass("d-none");
                        total = response.reduce((n, { amount }) => n + amount, 0).toFixed(2);
                        $("#GetTotalAmountPerMonth_3_total").html(total);
                        displayTotalPerMonthChart("GetTotalAmountPerMonth_3_canvas", response);

                    } else {
                        $("#alert-danger").removeClass("d-none");
                        $("#alert-danger").html("No data to display");
                    }

                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        }

        function displayTotalPerCategoryChart(selector, data) {
            var canvas = document.getElementById(selector);
            var ctx = canvas.getContext('2d');
            
            var labels = data.map(function (e) {
                return e.category + "[$" + e.amount.toFixed(2) + "]";
            });
            var data = data.map(function (e) {
                return e.amount.toFixed(2);
            });
            var colors = new Array();
            for (let i = 0; i < data.length; i++) {
                colors.push(dynamicColors());
            }

            var config = {
                type: 'doughnut',
                data: {
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: ["#58F5E8", "#BC98F5", "#7FF57F", "#F59567", "#F5F073"]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                    }
                },
            };

            if (chartArray != undefined && chartArray.filter(e => e.id === selector).length > 0) {
                index = chartArray.findIndex(o => o.id === selector);
                chartArray[index].data.destroy();
                chart = new Chart(ctx, config);
                chartArray[index].data = chart;
            } else {
                chart = new Chart(ctx, config);
                chartArray.push( ({ id: selector, data: chart }));
            }
        }

        function displayTotalPerMonthChart(selector, data) {
            var canvas = document.getElementById(selector);
            var ctx = canvas.getContext('2d');

            var labels = data.map(function (e) {
                return e.month;
            });
            var data = data.map(function (e) {
                return e.amount.toFixed(2);
            });
            var colors = new Array();
            for (let i = 0; i < data.length; i++) {
                colors.push(dynamicColors());
            }

            var config = {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: ["#58F5E8", "#BC98F5", "#7FF57F", "#F59567", "#F5F073"],
                        borderRadius: 10
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                },
                
            };

            if (chartArray != undefined && chartArray.filter(e => e.id === selector).length > 0) {
                index = chartArray.findIndex(o => o.id === selector);
                chartArray[index].data.destroy();
                chart = new Chart(ctx, config);
                chartArray[index].data = chart;
            } else {
                chart = new Chart(ctx, config);
                chartArray.push(({ id: selector, data: chart }));
            }
        }

        var dynamicColors = function () {
            var r = Math.floor(Math.random() * 255);
            var g = Math.floor(Math.random() * 255);
            var b = Math.floor(Math.random() * 255);
            return "rgb(" + r + "," + g + "," + b + ")";
        };

        // Weather API
        $.ajax({
            type: "POST",
            url: "//api.openweathermap.org/data/2.5/weather?q=toronto&appid=e1e3b6f19f77bf0db4d78765299d4a86&units=metric",
            success: function (response) {
                console.log(response)
            },
            failure: function (response) {
                alert(response.d);
            }
        });
    });
</script>